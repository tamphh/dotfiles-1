#!/bin/sh

set -ue

GIT=$(which git)

DIR_FONT=~/.local/share/fonts
PV="2.1.0"
PN_MATERIAL="MaterialDesign-Webfont"
PV_MATERIAL="3.8.95"

###############################################################
# Check deps

[[ -z $GIT ]] && echo "You have to install git plz" && exit 1

###############################################################
# Local functions

anim() {
  i=0
  sp='/-\|'
  n=${#sp}
  printf ' '
  while sleep 0.1; do
    printf "%s\b" "${sp:i++%n:1}"
  done
}

# Download with git ( arg1 = url | arg2 = path )
dl() {
  local pid
  echo -n "dl $1..."
  anim &
  pid=$!
  $($GIT clone $1 $2 2>/dev/null || exit 1)
  echo "[ok]"
  kill $pid # kill anim()
}

# Check if file exist else download ( arg1 = url | arg2 = path )
chk() {
  [ -d $2 ] || dl $1 $2
}

forZsh() {
  OH_MY_ZSH=~/.oh-my-zsh
  SPACESHIP=$OH_MY_ZSH/themes/spaceship-prompt
  [ -s $OH_MY_ZSH/themes/spaceship.zsh-theme ] && unlink $OH_MY_ZSH/themes/spaceship.zsh-theme
  [ -d $SPACESHIP ] && rm -rf $SPACESHIP
  [ -d $OH_MY_ZSH ] && {
    read -p "Clearing oh-my-zsh for updates? [y/n] "
    if [[ $REPLY =~ ^y|^Y ]] ; then
      rm -rf $OH_MY_ZSH
    else
      echo "Ok, we keep your directory..."
    fi
  }
  chk https://github.com/robbyrussell/oh-my-zsh.git $OH_MY_ZSH
  chk https://github.com/denysdovhan/spaceship-prompt.git $SPACESHIP
  # create symbolic link
  ln -s  $SPACESHIP/spaceship.zsh-theme $OH_MY_ZSH/themes/spaceship.zsh-theme
}

vimcolors() {
  vim_dir=$HOME/.vim/pack/my-plugins/start

  [ -d $vim_dir ] || mkdir -p $vim_dir
  chk https://github.com/kaicataldo/material.vim $vim_dir/material.vim
  chk https://github.com/szorfein/fantasy.vim $vim_dir/fantasy.vim
  chk https://github.com/szorfein/darkest-space $vim_dir/darkest-space
  chk https://github.com/szorfein/fromthehell.vim $vim_dir/fromthehell.vim
  chk https://github.com/szorfein/lightline.vim $vim_dir/lightline.vim
  chk https://github.com/edkolev/tmuxline.vim $vim_dir/tmuxline.vim
  chk https://github.com/sainnhe/gruvbox-material $vim_dir/gruvbox-material
  chk https://github.com/szorfein/sci.vim $vim_dir/sci
}

get_image() {
  img_name="$1"
  url="$2"
  wget -O /tmp/image "https://api.pcloud.com/getpubthumb?code=${url#*=}&linkpassword=undefined&size=2048x2048&crop=0&type=auto"
  if file /tmp/image | grep -iE jpeg\|jpg >/dev/null ; then
    echo "copying $DEST/$1.jpg..."
    mv /tmp/image $DEST/$1.jpg
  elif file /tmp/image | grep -i png >/dev/null ; then
    echo "copying $DEST/$1.png..."
    mv /tmp/image $DEST/$1.png
  else
    echo "extension for $1 is no found :("
    exit 1
  fi
  img_name= url=
}

download_images() {
  DEST=~/images

  [ -d ~/images ] || mkdir ~/images
  while read -r line; do
    filename=$(echo "${line%-*}" | tr -d " ")
    link=$(echo "${line#*-}" | tr -d " ")
    if [ -f "${DEST}/${filename}.png" ] || [ -f "${DEST}/${filename}.jpg" ] ; then
      :
    else
      echo "file: $filename no exist, download..."
      get_image $filename $link
    fi
  done < hidden-stuff/wallpapers-list.txt
}

check_fonts() {
  [ -f "$2" ] || {
    rm -rf "$1"
    mkdir "$1"
    curl -s -L -o "$2" "$3"
    (cd "$1" \
      && unzip ../"$2"
    )
  }
}

grab_fonts() {
  [ -d $DIR_FONT ] || mkdir -p $DIR_FONT

  echo "Nerd Fonts..."
  (cd $DIR_FONT \
    && check_fonts Iosevka "Iosevka-$PV.zip" "https://github.com/ryanoasis/nerd-fonts/releases/download/v$PV/Iosevka.zip" \
    && check_fonts RobotoMono "RobotoMono-$PV.zip" "https://github.com/ryanoasis/nerd-fonts/releases/download/v$PV/RobotoMono.zip" \
    && check_fonts SpaceMono "SpaceMono-$PV.zip" "https://github.com/ryanoasis/nerd-fonts/releases/download/v$PV/SpaceMono.zip" \
  )

  echo "The Material font..."
  (cd $DIR_FONT \
    && rm -rf font-mat*.tar.gz \
    && rm -rf $PN_MATERIAL* \
    && curl -s -L -o font-material.tar.gz "https://github.com/Templarian/$PN_MATERIAL/archive/v$PV_MATERIAL.tar.gz" \
    && tar xvf font-material.tar.gz \
    && mv $PN_MATERIAL-$PV_MATERIAL/fonts/materialdesignicons-webfont.ttf $DIR_FONT \
    && rm -rf $PN_MATERIAL*
  )

  echo "Dafont"
  (cd $DIR_FONT \
    && rm -rf cyberpunk* \
    && curl -s -L -o cyberpunk.zip "https://dl.dafont.com/dl/?f=cyberpunks" \
    && mkdir cyberpunk \
    && cd cyberpunk \
    && unzip ../cyberpunk.zip)
  fc-cache -vf $DIR_FONT
}

banner() {
  printf "%s\n" \
    '
   @@@@@@@   @@@@@@  @@@@@@@ @@@@@@@@ @@@ @@@      @@@@@@@@  @@@@@@
   @@!  @@@ @@!  @@@   @@!   @@!      @@! @@!      @@!      !@@    
   @!@  !@! @!@  !@!   @!!   @!!!:!   !!@ @!!      @!!!:!    !@@!! 
   !!:  !!! !!:  !!!   !!:   !!:      !!: !!:      !!:          !:!
   :: :  :   : :. :     :     :       :   : ::.: : : :: ::: ::.: : 
      '
    }

  usage() {
    printf "%s\n" \
      "-z, --zsh    Download and install dependencies of zsh"

    printf "%s\n" \
      "-i, --images    Download all the wallpapers."

    printf "%s\n" \
      "-v, --vim    Download and install all the vim colorscheme"

    printf "%s\n" \
      "-f, --fonts  Download and install all the fonts"

    printf "%s\n" \
      "-h, --help   Display this help"
    }

###############################################################
# Command line options

if [ "$#" -eq 0 ]; then
  printf "%s\\n" "$0: Argument required"
  printf "%s\\n" "Try '$0 --help' for more information."
  exit 1
fi

banner

while [ "$#" -gt 0 ] ; do
  case "$1" in
    -z | --zsh)
      forZsh
      shift
      ;;
    -v | --vim)
      vimcolors
      shift
      ;;
    -i | --images)
      download_images
      shift
      ;;
    -f | --fonts)
      grab_fonts
      shift
      ;;
    -h | --help)
      usage
      shift
      ;;
    *)
      usage
      printf "\\n%s\\n" "$0: Invalid option '$1'"
      exit 1
      ;;
  esac
done
